===================
8. Tips, プラグイン
===================


favicon
=======
ログを見ていると404エラーがでている行があります。::

    127.0.0.1 - - [04/Nov/2013 20:36:33] "GET /favicon.ico HTTP/1.1" 404 -

faviconです。ブラウザがfavicon.icoを取得しにきているのですが、
そんなルートは追加していないのでエラーになります。

faviconを配信するには以下のようにします。::

    import os
    from flask import send_from_directory

    @app.route('/favicon.ico')
    def favicon():
        return send_from_directory(os.path.join(app.root_path, 'static'),
                                   'favicon.ico', mimetype='image/vnd.microsoft.icon')

他にも方法はありますが、実稼働させた場合、faviconやstaticなファイルは
フロントエンドのnginxなどで配信させるため、わかりやすい@app.routeで
追加しておくと良いです。

:参考: `Adding a favicon — Flask 0.10.1 documentation <http://flask.pocoo.org/docs/patterns/favicon/>`_


プラグイン
==========

Flask-Security
---------------
Flaskのフォーム処理や認証処理などをセキュアにしてくれるプラグインが詰まったプラグイン

Flask-Social
---------------

Flask-Admin
---------------

Flask-DebugToolbar
-------------------

Flask-Assets
-------------------

Flask-WTF
-------------------
フォームをWTFormsというライブラリを使って、クラス化します。

WTFormsを使う利点としては次のようなことがあります。

* フォームに関する処理がまとまる
* セキュリティ対策

まず、wtformsというフォームツールをFlaskで簡単に扱うための
Flask-WTFをインストールします。::

    pip install Flask-WTF


LoginFormを追加します。

.. literalinclude:: ../samples/08/wtforms/flaskr/forms.py


viewをLoginFormを利用するように変更します。

.. literalinclude:: ../samples/08/wtforms/flaskr/views.py


テンプレートをLoginFormを利用するように変更します。

.. literalinclude:: ../samples/08/wtforms/flaskr/templates/login.html
    :language: html


実行してみましょう。::

    python manage.py debug


今までと変わらない動作をしていると思います。



ドキュメント
============

公式ドキュメント
----------------
* 

チュートリアル
--------------
* `The Flask Mega-Tutorial, Part I: Hello, World! - miguelgrinberg.com <http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world>`_




